{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "import requests\n",
    "from bs4 import BeautifulSoup\n",
    "import pandas as pd\n",
    "\n",
    "# Get the html content of the page\n",
    "url = 'https://www.bbc.com/mundo/topics/c404v5gz1rkt'\n",
    "headers = {\n",
    "    'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.105 Safari/537.36'\n",
    "}\n",
    "\n",
    "page = requests.get(url)\n",
    "soup = BeautifulSoup(page.content, 'html.parser')\n",
    "\n",
    "# Get articles with the following attributes: .card-body\n",
    "articles = soup.find_all(class_=\"focusIndicatorDisplayBlock bbc-uk8dsi e1d658bg0\")\n",
    "\n",
    "# Get the URL of every article on the page with attributes \"a\"\n",
    "urls = []\n",
    "\n",
    "for article in articles[:10]:\n",
    "    url = article['href']\n",
    "    urls.append(url)\n",
    "dates = []\n",
    "elements = soup.find_all(class_=\"bbc-16jlylf e1mklfmt0\")\n",
    "for element in elements[:10]:\n",
    "    dates.append(element.get_text())\n",
    "\n",
    "information_list = []\n",
    "\n",
    "# Get titles, subtitles, dates, and contents for every article\n",
    "for index, link in enumerate(urls):\n",
    "\n",
    "    r = requests.get(link, headers=headers)\n",
    "    soup = BeautifulSoup(r.text, 'html.parser')\n",
    "\n",
    "    # Get title\n",
    "    title = soup.find(class_=\"bbc-14gqcmb e1p3vdyi0\").get_text()\n",
    "\n",
    "    # Get subtitle\n",
    "    subtitle = soup.find(class_=\"bbc-hhl7in e17g058b0\").get_text()\n",
    "\n",
    "    content = []\n",
    "    elements = soup.find_all(class_=\"bbc-hhl7in e17g058b0\")\n",
    "    for element in elements[1:-1]:\n",
    "        content.append(element.get_text())\n",
    "\n",
    "    information = {\n",
    "        'date': dates[index],  # Use the corresponding date\n",
    "        'Link': urls[index],\n",
    "        'Website': 'BBC_Mundo',\n",
    "        'title': title,\n",
    "        'subtitle': subtitle,\n",
    "        'content': content,\n",
    "    }\n",
    "\n",
    "    information_list.append(information)\n",
    "\n",
    "# Create a DataFrame from the information list\n",
    "df = pd.DataFrame(information_list)\n",
    "\n",
    "# Save the DataFrame to a CSV file\n",
    "df.to_csv('output.csv', index=False)\n",
    "\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.4"
  },
  "orig_nbformat": 4
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
